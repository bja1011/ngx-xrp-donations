{
  "version": 3,
  "sources": [
    "webpack:///./$_lazy_route_resource lazy namespace object",
    "webpack:///./src/app/app.component.html",
    "webpack:///./projects/xrp-donations/src/lib/xrp-donations.component.ts",
    "webpack:///./projects/xrp-donations/src/lib/xrp-donations.module.ts",
    "webpack:///./projects/xrp-donations/src/lib/xrp-donations.service.ts",
    "webpack:///./src/app/app.component.scss",
    "webpack:///./src/app/app.component.ts",
    "webpack:///./src/app/app.module.ts",
    "webpack:///./src/environments/environment.ts",
    "webpack:///./src/main.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "main-es2015.js",
  "sourcesContent": [
    "function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";",
    "module.exports = \"<ngx-xrp-donations account=\\\"rDKQPqcVf2tmk7uLyZBxT6kRxRTei5idvG\\\"></ngx-xrp-donations>\\n\"",
    "import { Component, Input, OnInit } from '@angular/core';\nimport { ConnectionStatus, XrpDonationsService } from './xrp-donations.service';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'ngx-xrp-donations',\n  template: `\n    {{balance ? balance + 'XRP' : '-'}} <br>{{status}}\n  `,\n  styles: []\n})\nexport class XrpDonationsComponent implements OnInit {\n\n  @Input() account: string;\n  balance: number;\n  status: ConnectionStatus = ConnectionStatus.disconnected;\n\n  constructor(private xrpDonationsService: XrpDonationsService,\n  ) {\n    xrpDonationsService.connect()\n      .subscribe(msg => {\n        console.log(msg);\n        this.handleSocketResponse(msg);\n      });\n\n    xrpDonationsService.openObserver\n      .pipe(\n        take(1)\n      )\n      .subscribe((event) => {\n        this.status = ConnectionStatus.connected;\n        // xrpDonationsService.watchAccount(this.account);\n        xrpDonationsService.getAccount(this.account);\n      });\n  }\n\n  ngOnInit() {\n  }\n\n  private handleSocketResponse(msg: any) {\n    const accountData = msg.result.account_data;\n    if (accountData) {\n      this.balance = accountData.Balance / 1000000;\n    }\n  }\n}\n\n",
    "import { NgModule } from '@angular/core';\nimport { XrpDonationsComponent } from './xrp-donations.component';\n\n@NgModule({\n  declarations: [XrpDonationsComponent],\n  imports: [],\n  exports: [XrpDonationsComponent]\n})\nexport class XRPDonationsModule {\n}\n",
    "import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { webSocket } from 'rxjs/webSocket';\n\nconst rippleServer = 'wss://s2.ripple.com:443';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class XrpDonationsService {\n\n  socket: Subject<any>;\n  openObserver: Subject<Event> = new Subject<Event>();\n\n  constructor() {\n  }\n\n  connect() {\n    return this.socket = webSocket({\n      url: rippleServer,\n      openObserver: this.openObserver\n    });\n  }\n\n  getAccount(account: string) {\n    this.socket.next({\n      command: 'account_info',\n      account,\n      strict: true,\n      ledger_index: 'validated'\n    });\n  }\n\n  watchAccount(account: string) {\n    this.socket.next({\n      command: 'subscribe',\n      accounts: [account],\n      streams: [\n        'ledger'\n      ]\n    });\n  }\n\n  ping() {\n    const command = {\n      command: 'ping'\n    };\n    this.socket.next(command);\n  }\n}\n\nexport enum ConnectionStatus {\n  connected = 'Connected',\n  disconnected = 'Disconnected'\n}\n",
    "module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"",
    "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n",
    "import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { XRPDonationsModule } from '../../projects/xrp-donations/src/lib/xrp-donations.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    XRPDonationsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
    "// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n",
    "import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"
  ],
  "sourceRoot": ""
}
